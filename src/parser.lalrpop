// LALRPOP Parser Specification
//
// This file is part of AEx.
// Copyright (C) 2015 Jeffrey Sharp
//
// AEx is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// AEx is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
// the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with AEx.  If not, see <http://www.gnu.org/licenses/>.

use ast::*;
use ast::Stmt::*;
use interner::{Interner, StrId};
use lexer::{Pos, Token};
use message::Message;

grammar(strings: &Interner)["LALR(1)"];

extern {
    type Location = Pos;
    type Error    = Message;

    enum Token {
        Id  => Token::Id (<StrId>),
        Str => Token::Str(<StrId>),
        Num => Token::Num(<u64>),
        ";" => Token::Eos,
    }
}

pub Stmts: Vec<Stmt> = {
    <v:(<Stmt> ";")*> <s:Stmt?> => match s {
        None    => v,
        Some(s) => { let mut v = v; v.push(s); v },
    }
};

pub Stmt: Stmt = {
    Id  => Stub(<>),
    Str => Stub(<>)
};

