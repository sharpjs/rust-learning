AEX Types

Identifier      Description
--------------  ----------------------------------------
u8 u16 u32      unsigned integer
i8 i16 i32      signed   integer
f32 f64         floating-point
short            i8 displacement
near            i16 displacement
far             u32 address
shift3          shift; u3 but 0 => 8
--------------  ----------------------------------------


AEx Type Operators

Operator    As  Description
----------  --  ----------------------------------------
t.(n)           bit
t.(n:n)         bit range
----------  --  ----------------------------------------
[n] t       ->  array
t -> t      ->  pointer
( ) => ( )      function
struct { }      structure
union  { }      union
----------  --  ----------------------------------------


AEx Value Operators

Operator    As  Description
----------  --  ----------------------------------------
(a)             group
----------  --  ----------------------------------------
a++         <-  post-increment
a--         <-  post-decrement
a?          <-  test
a(b, c)     <-  invoke function
a[b]        <-  dereference array element
a.b         <-  dereference structure member
----------  --  ----------------------------------------
++a         ->  pre-increment
--a         ->  pre-decrement
&a          ->  reference
*a          ->  dereference
!a          ->  clear
~a          ->  bitwise    negate (1's complement)
-a          ->  arithmetic negate (2's complement)
----------  --  ----------------------------------------
:           <-  cast
:>          <-  convert
----------  --  ----------------------------------------
*           <-  multiply
/           <-  divide
%           <-  modulo
----------  --  ----------------------------------------
+           <-  add
-           <-  subtract
----------  --  ----------------------------------------
<<          <-  shift left
>>          <-  shift ->
<<%         <-  rotate left
%>>         <-  rotate ->
----------  --  ----------------------------------------
&           <-  bitwise and
----------  --  ----------------------------------------
^           <-  bitwise xor
----------  --  ----------------------------------------
|           <-  bitwise or
----------  --  ----------------------------------------
<>              compare
----------  --  ----------------------------------------
=>              yields
==              is equal to
!=              is not equal to
<               is less than
<=              is less than or equal to
>               is more than
>=              is more than or equal to
----------  --  ----------------------------------------
=               assign
----------  --  ----------------------------------------

